(BYTECODE-FUNCTION (NAME main) (CODE (11 0 9 0 10 0 15 11 1 9 1 10 0 15 11 2 9 2 10 0 15 11 3 9 3 10 0 15 11 4 9 4 10 0 15 11 5 9 5 10 0 15 11 6 9 6 10 0 15 11 7 9 7 10 0 15 11 8 9 8 10 0 15 11 9 9 9 10 0 15 11 10 9 10 10 0 15 11 11 9 11 10 0 15 11 12 9 12 10 0 15 11 13 9 13 10 0 15 11 14 9 14 10 0 15 11 15 9 15 10 0 15 11 16 9 16 10 0 15 11 17 9 17 10 0 15 11 18 9 18 10 0 15 11 19 9 19 10 0 15 11 20 9 20 10 0 15 11 21 9 21 10 0 15 11 22 9 22 10 0 15 11 23 9 23 10 0 15 11 24 9 24 10 0 15 11 25 9 25 10 0 15 11 26 9 26 10 0 15 11 27 9 27 10 0 15 11 28 9 28 10 0 15 11 29 9 29 10 0 15 11 30 12 0 9 30 10 0 15 11 31 12 0 9 31 10 0 15 11 32 9 32 10 0 15 11 33 9 33 10 0 15 11 34 9 34 10 0 15 11 35 9 35 10 0 15 11 36 9 36 10 0 15 11 37 9 37 10 0 15 11 38 9 38 10 0 15 11 39 9 39 10 0 15 8 40 9 41 10 0 15 10 1 8 42 13 1 14)) (NB-ARGS 0 #f) (NB-LOCALS 0) (UPVAL-DESCRS ()) (CONSTS (#<unspecified> x)) (NAMES (caar cadr cdar cddr caaar caadr cadar caddr cdaar cdadr cddar cdddr caaaar caaadr caadar caaddr cadaar cadadr caddar cadddr cdaaar cdaadr cdadar cdaddr cddaar cddadr cdddar cddddr list cons* length reverse list-tail list-ref map for-each append assoc fibo prn display write error)) (FUNCTIONS ((BYTECODE-FUNCTION (NAME caar) (CODE (3 0 8 0 12 1 8 0 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cadr) (CODE (3 0 8 0 12 1 8 1 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cdar) (CODE (3 0 8 0 12 1 8 1 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (car cdr)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cddr) (CODE (3 0 8 0 12 1 8 0 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME caaar) (CODE (3 0 8 0 12 1 8 0 12 1 8 0 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME caadr) (CODE (3 0 8 0 12 1 8 1 12 1 8 1 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cadar) (CODE (3 0 8 0 12 1 8 1 12 1 8 0 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (car cdr)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME caddr) (CODE (3 0 8 0 12 1 8 0 12 1 8 1 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cdaar) (CODE (3 0 8 0 12 1 8 0 12 1 8 1 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (car cdr)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cdadr) (CODE (3 0 8 0 12 1 8 1 12 1 8 0 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cddar) (CODE (3 0 8 0 12 1 8 1 12 1 8 1 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (car cdr)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cdddr) (CODE (3 0 8 0 12 1 8 0 12 1 8 0 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME caaaar) (CODE (3 0 8 0 12 1 8 0 12 1 8 0 12 1 8 0 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME caaadr) (CODE (3 0 8 0 12 1 8 1 12 1 8 1 12 1 8 1 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME caadar) (CODE (3 0 8 0 12 1 8 1 12 1 8 0 12 1 8 0 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (car cdr)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME caaddr) (CODE (3 0 8 0 12 1 8 0 12 1 8 1 12 1 8 1 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cadaar) (CODE (3 0 8 0 12 1 8 0 12 1 8 1 12 1 8 0 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (car cdr)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cadadr) (CODE (3 0 8 0 12 1 8 1 12 1 8 0 12 1 8 1 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME caddar) (CODE (3 0 8 0 12 1 8 1 12 1 8 1 12 1 8 0 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (car cdr)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cadddr) (CODE (3 0 8 0 12 1 8 0 12 1 8 0 12 1 8 1 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cdaaar) (CODE (3 0 8 0 12 1 8 0 12 1 8 0 12 1 8 1 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (car cdr)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cdaadr) (CODE (3 0 8 0 12 1 8 1 12 1 8 1 12 1 8 0 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cdadar) (CODE (3 0 8 0 12 1 8 1 12 1 8 0 12 1 8 1 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (car cdr)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cdaddr) (CODE (3 0 8 0 12 1 8 0 12 1 8 1 12 1 8 0 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cddaar) (CODE (3 0 8 0 12 1 8 0 12 1 8 1 12 1 8 1 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (car cdr)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cddadr) (CODE (3 0 8 0 12 1 8 1 12 1 8 0 12 1 8 0 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cdddar) (CODE (3 0 8 0 12 1 8 1 12 1 8 1 12 1 8 1 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (car cdr)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cddddr) (CODE (3 0 8 0 12 1 8 0 12 1 8 0 12 1 8 0 13 1 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME list) (CODE (3 0 14)) (NB-ARGS 1 #t) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES ()) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME cons*) (CODE (3 0 8 0 12 1 11 0 13 1 14)) (NB-ARGS 1 #t) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (reverse)) (FUNCTIONS ((BYTECODE-FUNCTION (NAME #f) (CODE (3 0 8 0 12 1 8 1 12 1 3 0 8 2 12 1 8 3 13 2 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (cdr reverse car append)) (FUNCTIONS ()))))) (BYTECODE-FUNCTION (NAME #f) (CODE (5 0 11 0 7 0 10 0 15 11 1 14)) (NB-ARGS 0 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS (#<unspecified>)) (NAMES ()) (FUNCTIONS ((BYTECODE-FUNCTION (NAME length1) (CODE (3 0 8 0 12 1 2 14 0 3 1 0 32 0 3 0 8 1 12 1 10 0 3 1 8 2 12 2 6 2 13 2 14)) (NB-ARGS 2 #f) (NB-LOCALS 3) (UPVAL-DESCRS ((0 2))) (CONSTS (1)) (NAMES (null? cdr +)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME #f) (CODE (3 0 10 0 6 1 13 2 14)) (NB-ARGS 1 #f) (NB-LOCALS 2) (UPVAL-DESCRS ((0 1))) (CONSTS (0)) (NAMES ()) (FUNCTIONS ()))))) (BYTECODE-FUNCTION (NAME #f) (CODE (5 0 11 0 7 0 10 0 15 11 1 14)) (NB-ARGS 0 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS (#<unspecified>)) (NAMES ()) (FUNCTIONS ((BYTECODE-FUNCTION (NAME reverse1) (CODE (3 0 8 0 12 1 2 14 0 3 1 0 36 0 3 0 8 1 12 1 3 0 8 2 12 1 3 1 8 3 12 2 6 2 13 2 14)) (NB-ARGS 2 #f) (NB-LOCALS 3) (UPVAL-DESCRS ((0 2))) (CONSTS ()) (NAMES (null? cdr car cons)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME #f) (CODE (3 0 10 0 6 1 13 2 14)) (NB-ARGS 1 #f) (NB-LOCALS 2) (UPVAL-DESCRS ((0 1))) (CONSTS (())) (NAMES ()) (FUNCTIONS ()))))) (BYTECODE-FUNCTION (NAME list-tail) (CODE (3 1 10 0 8 0 12 2 2 16 0 3 0 0 18 0 10 1 15 3 0 8 1 12 1 3 1 10 2 8 2 12 2 8 3 13 2 14)) (NB-ARGS 2 #f) (NB-LOCALS 2) (UPVAL-DESCRS ()) (CONSTS (0 #<unspecified> 1)) (NAMES (= cdr - list-tail)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME list-ref) (CODE (3 0 3 1 8 0 12 2 8 1 13 1 14)) (NB-ARGS 2 #f) (NB-LOCALS 2) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (list-tail car)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME map) (CODE (3 1 8 0 12 1 2 14 0 10 0 0 40 0 3 1 8 1 12 1 3 0 12 1 3 0 3 1 8 2 12 1 8 3 12 2 8 4 13 2 14)) (NB-ARGS 2 #f) (NB-LOCALS 2) (UPVAL-DESCRS ()) (CONSTS (())) (NAMES (null? car cdr map cons)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME for-each) (CODE (3 1 8 0 12 1 2 14 0 10 0 0 37 0 3 1 8 1 12 1 3 0 12 1 15 3 0 3 1 8 2 12 1 8 3 13 2 14)) (NB-ARGS 2 #f) (NB-LOCALS 2) (UPVAL-DESCRS ()) (CONSTS (())) (NAMES (null? car cdr for-each)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME append) (CODE (3 0 8 0 12 1 2 14 0 3 1 0 36 0 3 0 8 1 12 1 3 0 8 2 12 1 3 1 8 3 12 2 8 4 13 2 14)) (NB-ARGS 2 #f) (NB-LOCALS 2) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (null? car cdr append cons)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME assoc) (CODE (3 1 8 0 12 1 2 14 0 10 0 0 50 0 3 0 3 1 8 1 12 1 8 2 12 2 2 38 0 3 1 8 3 13 1 0 50 0 3 0 3 1 8 4 12 1 8 5 13 2 14)) (NB-ARGS 2 #f) (NB-LOCALS 2) (UPVAL-DESCRS ()) (CONSTS (#f)) (NAMES (null? caar equal? car cdr assoc)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME fibo) (CODE (3 0 10 0 8 0 12 2 2 16 0 3 0 0 44 0 3 0 10 1 8 1 12 2 8 2 12 1 3 0 10 0 8 1 12 2 8 2 12 1 8 3 13 2 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS (2 1)) (NAMES (< - fibo +)) (FUNCTIONS ())) (BYTECODE-FUNCTION (NAME prn) (CODE (3 0 8 0 12 1 15 8 1 13 0 14)) (NB-ARGS 1 #f) (NB-LOCALS 1) (UPVAL-DESCRS ()) (CONSTS ()) (NAMES (display newline)) (FUNCTIONS ())))))